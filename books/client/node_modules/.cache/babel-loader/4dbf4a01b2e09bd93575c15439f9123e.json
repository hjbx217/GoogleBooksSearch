{"ast":null,"code":"import _slicedToArray from \"/Users/joycebae/GoogleBooksSearch/books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/joycebae/GoogleBooksSearch/books/client/src/pages/Books.js\";\nimport React, { useEffect, useState } from \"react\"; //import Jumbotron from \"../components/Jumbotron\";\n\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SearchForm from \"../components/Search/Search\";\nimport Saved from \"../components/Saved\";\n\nfunction Books() {\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      query = _useState6[0],\n      setQuery = _useState6[1]; // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n  // Loads all books and sets them to books\n\n\n  function loadBooks(query) {\n    API.getGoogle(query).then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n\n  function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    console.log(value);\n    setQuery(value);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    handleInputChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange() {},\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange() {},\n    name: \"author\",\n    placeholder: \"Author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: function onChange() {},\n    name: \"synopsis\",\n    placeholder: \"Synopsis (Optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.title),\n    onClick: function onClick(event) {\n      event.preventDefault();\n      loadBooks(query);\n      console.log(books);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Submit Book\"))), /*#__PURE__*/React.createElement(Saved, {\n    books: books,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/joycebae/GoogleBooksSearch/books/client/src/pages/Books.js"],"names":["React","useEffect","useState","API","Col","Row","Container","Input","TextArea","FormBtn","SearchForm","Saved","Books","books","setBooks","formObject","setFormObject","query","setQuery","loadBooks","getGoogle","then","res","data","catch","err","console","log","handleInputChange","e","target","name","value","author","title","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n//import Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SearchForm from \"../components/Search/Search\";\nimport Saved from \"../components/Saved\";\n\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n  const [query, setQuery] = useState(\"\")\n\n  // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n\n  // Loads all books and sets them to books\n  function loadBooks(query) {\n    API.getGoogle(query)\n      .then(res =>\n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  function handleInputChange(e) {\n    const { name, value } = e.target\n    console.log(value);\n    setQuery(value)\n  }\n\n\n  return (\n    <Container fluid>\n      <SearchForm handleInputChange={handleInputChange}>\n      </SearchForm>\n      {/*Create Row for the Search(ed) Books*/}\n      <Row>\n        <Col size=\"md-6\">\n          {/* <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron> */}\n          <form>\n            <Input\n              onChange={() => { }}\n              name=\"title\"\n              placeholder=\"Title (required)\"\n            />\n            <Input\n              onChange={() => { }}\n              name=\"author\"\n              placeholder=\"Author (required)\"\n            />\n            <TextArea\n              onChange={() => { }}\n              name=\"synopsis\"\n              placeholder=\"Synopsis (Optional)\"\n            />\n            <FormBtn\n              disabled={!(formObject.author && formObject.title)}\n              onClick={(event) => { event.preventDefault();\n                loadBooks(query) \n              console.log(books)}}\n            >\n              Submit Book\n              </FormBtn>\n          </form>\n        </Col>\n        {/*Call Saved component here */}\n        <Saved books={books}></Saved>\n\n      </Row>\n    </Container>\n  );\n}\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}