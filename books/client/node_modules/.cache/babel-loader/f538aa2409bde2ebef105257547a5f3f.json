{"ast":null,"code":"import _slicedToArray from \"/Users/joycebae/GoogleBooksSearch/books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/joycebae/GoogleBooksSearch/books/client/src/pages/Books.js\";\nimport React, { useEffect, useState } from \"react\"; //import Jumbotron from \"../components/Jumbotron\";\n\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SearchForm from \"../components/Search/Search\";\nimport Saved from \"../components/Saved\";\n\nfunction Books() {\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"What Books Should I Read?\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange() {},\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange() {},\n    name: \"author\",\n    placeholder: \"Author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: function onChange() {},\n    name: \"synopsis\",\n    placeholder: \"Synopsis (Optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.title),\n    onClick: function onClick() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Submit Book\"))), /*#__PURE__*/React.createElement(Saved, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/joycebae/GoogleBooksSearch/books/client/src/pages/Books.js"],"names":["React","useEffect","useState","API","Col","Row","Container","Input","TextArea","FormBtn","SearchForm","Saved","Books","books","setBooks","formObject","setFormObject","loadBooks","getBooks","then","res","data","catch","err","console","log","author","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,SAASC,KAAT,GAAiB;AACf;AADe,kBAEWV,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAERW,KAFQ;AAAA,MAEDC,QAFC;;AAAA,mBAGqBZ,QAAQ,CAAC,EAAD,CAH7B;AAAA;AAAA,MAGRa,UAHQ;AAAA,MAGIC,aAHJ,kBAKf;;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT,CANe,CAUf;;AACA,WAASA,SAAT,GAAqB;AACnBd,IAAAA,GAAG,CAACe,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,aACPN,QAAQ,CAACM,GAAG,CAACC,IAAL,CADD;AAAA,KADX,EAIGC,KAJH,CAIS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAJZ;AAKD;;AAAA;AAGC,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAE,oBAAM,CAAE,CADpB;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAE,oBAAM,CAAE,CADpB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,WAAW,EAAC,mBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAWE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,oBAAM,CAAE,CADpB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,qBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAgBE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAE,EAAER,UAAU,CAACW,MAAX,IAAqBX,UAAU,CAACY,KAAlC,CADZ;AAEE,IAAA,OAAO,EAAE,mBAAM,CAAE,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBF,CAJF,CADF,eA8BA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BA,CAHF,CADF;AAuCD;;AAGH,eAAef,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n//import Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SearchForm from \"../components/Search/Search\";\nimport Saved from \"../components/Saved\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res => \n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n\n    return (\n      <Container fluid>\n        <SearchForm></SearchForm>\n        {/*Create Row for the Search(ed) Books*/}\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                onChange={() => {}}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <Input\n                onChange={() => {}}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n              />\n              <TextArea\n                onChange={() => {}}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              />\n              <FormBtn\n                disabled={!(formObject.author && formObject.title)}\n                onClick={() => {}}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n          </Col>\n        {/*Call Saved component here */}\n        <Saved></Saved>\n\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}